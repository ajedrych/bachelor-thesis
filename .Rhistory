library("readxl")
library("sandwich")
library("knitr")
library("tidyverse")
#LOAD DATA
df <- read_excel("model wwa.xlsx")
View(df)
# WARTOŚĆI BRAKUJĄCE
sapply(df, function(x) sum(is.na(x)))
#LOAD DATA
df <- read_excel("model wwa.xlsx")
View(df)
# WARTOŚĆI BRAKUJĄCE
sapply(df, function(x) sum(is.na(x)))
#DELETE NA
df1<-na.omit(df)
str(df1) #TYPES OF VARIABLES
pairs(df1[,0:10])
# CORRELATION PLOT
library(corrplot)
kor<-cor(df)
corrplot(kor, method="circle")
library("stargazer")
stargazer(as.data.frame(df), type = "text")
library(rcompanion)
par(mfrow=c(1,2))
plotNormalHistogram(df1$wypadki, prob = FALSE,
main = "wypadki and normal distribution",
linecol = "red",
length = 1000)
df1$ln_wypadki = log(df1$wypadki)
plotNormalHistogram(df1$ln_wypadki, prob = FALSE,
main = "ln_wypadki and normal distribution",
linecol = "red",
length = 1000)
library("tseries")
jarque.bera.test(df1$wypadki) #p-value < 0.05, I reject H0 about normal distribution of wypadki
jarque.bera.test(df1$ln_wypadki) #p-value > 0.05; no grounds for rejecting H0 about normal distribution of ln_wypadki
summary(df1$wypadki)
install.packages("ggthemes")
library("ggthemes")
par(mfrow=c(1,2))
boxplot_wypadki <- ggplot( data.frame(df1$wypadki), aes(y=df1$wypadki)) +
geom_boxplot() +
ggtitle("Boxplot zmiennej wypadki") +
xlab("")
boxplot_wypadki <- ggplot( data.frame(df1$wypadki), aes(y=df1$wypadki)) +
geom_boxplot() +
ggtitle("Boxplot zmiennej wypadki") +
xlab("")
boxplot_wypadki
boxplot_ln_wypadki <- ggplot( data.frame(df1$ln_wypadki), aes(y=df1$ln_wypadki)) +
geom_boxplot() +
ggtitle("Boxplot zmiennej ln_wypadki") +
xlab("")
boxplot_ln_wypadki
boxplot_wypadki
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(wypadki~kwarantanna + zachorowania + zgony + opady + temp + wilgotnosc + stringency_index +
driving_apple + walking_apple + retail_and_recreation + grocery_and_pharmacy +
parks + transit_stations + workplaces + residential, data=df1)
summary(model1)
library("stargazer")
stargazer(model1, type="text", align= TRUE, style="default", df=FALSE)
##################################################################
########################### NEXT MODEL ###########################
#MODEL 2 - delete driving_apple
model2=lm(wypadki~kwarantanna + zachorowania + zgony + opady + temp + wilgotnosc + stringency_index +
walking_apple + retail_and_recreation + grocery_and_pharmacy +
parks + transit_stations + workplaces + residential, data=df1)
summary(model2)
plotNormalHistogram(df1$driving_apple, prob = FALSE,
main = "driving_apple and normal distribution",
linecol = "red",
length = 1000)
describe(df1$driving_apple)
library(psych)
resettest(model1, power=2:3, type="fitted")
library("lmtest")
library("foreign")
resettest(model1, power=2:3, type="fitted")
resettest(model1, power=2:3, type="regressor")
# TEST CHOWA
library(strucchange)
sctest(model1, type = "Chow", point = 10)
##################################################################
########################### NEXT MODEL ###########################
#MODEL 2 - delete driving_apple
model2=lm(wypadki~kwarantanna + zachorowania + zgony + opady + temp + wilgotnosc + stringency_index +
walking_apple + retail_and_recreation + grocery_and_pharmacy +
parks + transit_stations + workplaces + residential, data=df1)
summary(model2)
########################### VARIABLES CHECKING ###########################
# VARIABLE DRIVING_APPLE
g_driving_apple<-ggplot(df1, aes(x=wypadki, y=driving_apple)) +geom_point(color="red")
g_driving_apple
par(mfrow=c(1,2))
plotNormalHistogram(df1$driving_apple, prob = FALSE,
main = "driving_apple and normal distribution",
linecol = "red",
length = 1000)
library("psych")
describe(df1$driving_apple)
library("tseries")
jarque.bera.test(df1$driving_apple) #p-value < 0.05, I reject H0 about normal distribution
df1$ln_driving_apple = log(df1$driving_apple)
plotNormalHistogram(df1$ln_driving_apple, prob = FALSE,
main = "ln_driving_apple and normal distribution",
linecol = "red",
length = 1000)
jarque.bera.test(df1$ln_driving_apple)
resettest(model2, power=2:3, type="fitted")
resettest(model2, power=2:3, type="regressor")
sctest(model2, type = "Chow", point = 10)
########################### VARIABLES CHECKING ###########################
# VARIABLE retail and recreation
g_retail_and_recreation<-ggplot(df1, aes(x=wypadki, y=retail_and_recreation)) +geom_point(color="red")
g_retail_and_recreation
plotNormalHistogram(df1$retail_and_recreation, prob = FALSE,
main = "retail_and_recreation and normal distribution",
linecol = "red",
length = 1000)
jarque.bera.test(df1$retail_and_recreation) #p-value < 0.05, I reject H0 about normal distribution
df1$ln_retail_and_recreation = log(df1$retail_and_recreation)
##################################################################
########################### NEXT MODEL ###########################
#MODEL 3 - retail_and_recreation
model3=lm(wypadki~kwarantanna + zachorowania + zgony + opady + temp + wilgotnosc + stringency_index +
walking_apple + grocery_and_pharmacy + parks + transit_stations + workplaces + residential, data=df1)
summary(model3)
resettest(model2, power=2:3, type="fitted")
resettest(model2, power=2:3, type="regressor")
##################################################################
########################### NEXT MODEL ###########################
#MODEL 3 - retail_and_recreation
model3=lm(wypadki~kwarantanna + zachorowania + zgony + opady + temp + wilgotnosc + stringency_index, data=df1)
summary(model3)
