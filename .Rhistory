#LOAD DATA
df <- read_excel("model.xlsx")
library("readxl")
library("sandwich")
library("knitr")
library("tidyverse")
options(scipen = 999)
#LOAD DATA
df <- read_excel("model.xlsx")
# WARTOŚĆI BRAKUJĄCE
sapply(df, function(x) sum(is.na(x)))
kor<-cor(df)
# CORRELATION PLOT
library(corrplot)
kor<-cor(df)
"model.xlsx"
#LOAD DATA
df <- read_excel("model.xlsx")
View(df)
# CORRELATION PLOT
library(corrplot)
kor<-cor(df)
corrplot(kor, method="circle")
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(traffic_incidents~quarantine+new_cases+new_deaths+rainfall+
temperature+humidity+stringency_index+driving+walking,data = df)
summary(model1)
model1=lm(traffic_incidents~quarantine+new_cases+new_deaths+rainfall+
temperature+humidity+driving+walking,data = df)
summary(model1)
model1=lm(traffic_incidents~quarantine+new_cases+new_deaths+rainfall+
temperature+driving+walking,data = df)
summary(model1)
###################################################################
########################### FIRST MODEL ###########################
#MODEL 1
model1=lm(traffic_incidents~quarantine+new_cases+new_deaths+rainfall+
temperature+humidity+stringency_index+driving+walking,data = df)
summary(model1)
model2=lm(traffic_incidents~quarantine+new_cases+new_deaths+rainfall+
temperature+driving+walking,data = df)
summary(model2)
model2=lm(traffic_incidents~quarantine+new_cases+new_deaths+rainfall+
temperature+humidity+driving+walking,data = df)
summary(model2)
model3=lm(traffic_incidents~quarantine+new_cases+new_deaths+rainfall+
temperature+driving+walking,data = df)
summary(model3)
model4=lm(traffic_incidents~quarantine+new_deaths+rainfall+
temperature+driving+walking,data = df)
summary(model4)
model4=lm(traffic_incidents~quarantine+new_deaths+
temperature+driving+walking,data = df)
model4=lm(traffic_incidents~quarantine+new_deaths+rainfall+
temperature+driving+walking,data = df)
summary(model4)
model5=lm(traffic_incidents~quarantine+new_deaths+
temperature+driving+walking,data = df)
summary(model5)
resettest(model5, power=2:3, type="fitted")
library("lmtest")
library("foreign")
resettest(model5, power=2:3, type="fitted")
#MODEL 4 - USUWAM RAINFALL
model4=lm(traffic_incidents ~ quarantine + new_cases + new_deaths + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model4)
View(df)
View(df)
#LOAD DATA
df <- read_excel("model_2020.xlsx")
library("readxl")
library("sandwich")
library("knitr")
library("tidyverse")
options(scipen = 999)
#LOAD DATA
df <- read_excel("model_2020.xlsx")
View(df)
library(Hmisc)
hist.data.frame(df)
################################### ALL TRAFFIC INCIDENTS ###############################
#MODEL 1
model1=lm(traffic_incidents ~ quarantine + new_cases + new_deaths+rainfall + temperature + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model1)
resettest(model1, power=2:3, type="fitted")
#MODEL 2 - USUWAM TEMPERATURE
model2=lm(traffic_incidents ~ quarantine + new_cases + new_deaths + rainfall + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model2)
resettest(model2, power=2:3, type="fitted")
#MODEL 3 - USUWAM QUARANTINE
model3=lm(traffic_incidents ~ new_cases + new_deaths + rainfall + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model3)
#MODEL 2 - USUWAM TEMPERATURE
model2=lm(traffic_incidents ~ quarantine + new_cases + new_deaths + rainfall + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model2)
resettest(model2, power=2:3, type="fitted")
#MODEL 3 - USUWAM QUARANTINE
model3=lm(traffic_incidents ~ new_cases + new_deaths + rainfall + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model3)
resettest(model3, power=2:3, type="fitted")
#MODEL 4 - USUWAM RAINFALL
model4=lm(traffic_incidents ~ quarantine + new_cases + new_deaths + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model4)
#MODEL 2 - USUWAM TEMPERATURE
model2=lm(traffic_incidents ~ quarantine + new_cases + new_deaths + rainfall + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model2)
################################### ALL TRAFFIC INCIDENTS ###############################
#MODEL 1
model1=lm(traffic_incidents ~ quarantine + new_cases + new_deaths+rainfall + temperature + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model1)
resettest(model1, power=2:3, type="fitted")
library("lmtest")
library("foreign")
################################### ALL TRAFFIC INCIDENTS ###############################
#MODEL 1
model1=lm(traffic_incidents ~ quarantine + new_cases + new_deaths+rainfall + temperature + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model1)
resettest(model1, power=2:3, type="fitted")
#MODEL 2 - USUWAM TEMPERATURE
model2=lm(traffic_incidents ~ quarantine + new_cases + new_deaths + rainfall + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model2)
#MODEL 3 - USUWAM QUARANTINE
model3=lm(traffic_incidents ~ new_cases + new_deaths + rainfall + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model3)
#MODEL 4 - USUWAM RAINFALL
model4=lm(traffic_incidents ~ quarantine + new_cases + new_deaths + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model4)
#MODEL 4 - USUWAM RAINFALL
model4=lm(traffic_incidents ~ new_cases + new_deaths + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model4)
resettest(model4, power=2:3, type="fitted")
resettest(model4, power=2:3, type="fitted")
linearHypothesis(model=model1, c("temperature", "quarantine", "rainfall", ))
linearHypothesis(model=model1, c("temperature", "quarantine", "rainfall" ))
library("car")
linearHypothesis(model=model1, c("temperature", "quarantine", "rainfall" ))
resettest(model4, power=2:3, type="fitted")
#MODEL 5 - USUWAM walking
model5=lm(traffic_incidents ~ new_cases + new_deaths + humidity + stringency_index+
driving + fuel + pandemic + weekend_free, data = df)
summary(model5)
resettest(model5, power=2:3, type="fitted")
#MODEL 6 - USUWAM fuel
model6=lm(traffic_incidents ~ new_cases + new_deaths + humidity + stringency_index+
driving + pandemic + weekend_free, data = df)
summary(model6)
resettest(model6, power=2:3, type="fitted")
linearHypothesis(model=model1, c("temperature", "quarantine", "rainfall", "walking", "fuel" ))
#MODEL 3 - USUWAM QUARANTINE
model3=lm(traffic_incidents ~ new_cases + new_deaths + rainfall + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model3)
################################### ALL TRAFFIC INCIDENTS ###############################
#MODEL 1
model1=lm(traffic_incidents ~ quarantine + new_cases + new_deaths+rainfall + temperature + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model1)
summary(model6)
library(stargazer)
stargazer(model1, model6, type="text", align= TRUE, style="default", df=TRUE, column.labels = c("wersja początkowa", "wersja finalna"))
resettest(model6, power=2:3, type="fitted")
sctest(model6, type = "Chow", point = 10)
library(strucchange)
sctest(model6, type = "Chow", point = 10)
bptest(model6, studentize=TRUE)
model6.lmw <- lm((traffic_incidents ~ new_cases + new_deaths + humidity + stringency_index+
driving + pandemic + weekend_free
data = df
weights = model6.weights))
model6.lmw <- lm((traffic_incidents ~ new_cases + new_deaths + humidity + stringency_index+
driving + pandemic + weekend_free,
data = df,
weights = model6.weights))
data = df,
library("car")
model_glm=glm(traffic_incidents ~ new_cases + new_deaths + humidity + stringency_index+
driving + pandemic + weekend_free, data = df)
summary(model_glm)
model6.weights <- 1 / lm(abs(model6$residuals) ~ model6$fitted.values)$fitted.values^2
model6.lmw <- lm(traffic_incidents ~ new_cases + new_deaths + humidity + stringency_index+
driving + pandemic + weekend_free,
data = df,
weights = model6.weights)
summary.lm(model6.lmw)$coefficients
summary(model6.lmw)
stargazer(model6, model_glm, model6.lmw, type="text", align= TRUE, style="default", df=TRUE, column.labels = c("MNK", "SUMNK", "WMNK"))
stargazer(model1, model6, model_glm, model6.lmw, type="text", align= TRUE, style="default", df=TRUE, column.labels = c("MNK_first", "MNK_final", "SUMNK", "WMNK"))
summary(model6)
stargazer(model1, model6, model_glm, model6.lmw, type="text", align= TRUE, style="default", df=TRUE, column.labels = c("MNK_first", "MNK_final", "SUMNK", "WMNK"))
bptest(model6.lmw, studentize=TRUE)
jarque.bera.test(model6$residuals)
################ normalność rozkładu reszt
library("sandwich")
library("knitr")
library("tidyverse")
jarque.bera.test(model6$residuals)
library("tsoutliers")
jarque.bera.test(model6$residuals)
library("tseries")
jarque.bera.test(model6$residuals)
jarque.bera.test(model6.lmw$residuals)
shapiro.test(model6$residuals)
shapiro.test(model6.lmw$residuals)
d<-density(model6.lmw$residuals)
plot(d,main='Residual KDE Plot',xlab='Residual value')
plot(ecdf(model6.lmw$residuals), main='Residual Empirical CDF')
plot(model6.lmw, 1) #residuals vs fitted
plot(model6.lmw, 2) #normal q-q
plot(model6.lmw, 3) #scale-location
plot(model6.lmw, 4) #cook's distance
plot(model6.lmw, 5) #residuals vs leverage
plot(model6.lmw, 6) #cook's dist vs leverage
d<-density(model6.lmw$residuals)
plot(d,main='Residual KDE Plot',xlab='Residual value')
plot(ecdf(model6.lmw$residuals), main='Residual Empirical CDF')
dwtest(model6.lmw)
dwtest(model6)
#breuscha godfreya
bgtest(model6)
library("lmtest")
library("sandwich")
NeweyWest(model6.lmw, lag=5, prewhite=FALSE)
autocorr = coeftest(model6.lmw, vcov=NeweyWest(model6.lmw, lag=5, prewhite=FALSE))
show(autocorr)
stargazer(model6.lmw, autocorr, type="text", df=FALSE, column.labels = c("wersja finalna", "estymator Neweya-Westa"))
stargazer(model6.lmw, autocorr, type="text", df=FALSE, column.labels = c("WMNK", "estymator Neweya-Westa"))
summary(autocorr)
plot(model6.lmw, 1) #residuals vs fitted
plot(model6.lmw, 2) #normal q-q
plot(model6.lmw, 3) #scale-location
plot(model6.lmw, 3) #scale-location
plot(model6.lmw, 2) #normal q-q
plot(model6.lmw, 3) #scale-location
plot(model6.lmw, 4) #cook's distance
plot(model6.lmw, 5) #residuals vs leverage
plot(model6.lmw, 6) #cook's dist vs leverage
d<-density(model6.lmw$residuals)
plot(d,main='Residual KDE Plot',xlab='Residual value')
plot(ecdf(model6.lmw$residuals), main='Residual Empirical CDF')
d<-density(model6.lmw$residuals)
plot(d,main='Residual KDE Plot',xlab='Residual value')
jarque.bera.test(model6.lmw$residuals)
dwtest(model6.lmw)
#breuscha godfreya
bgtest(model6.lmw)
dwtest(model6)
NeweyWest(model6.lmw, lag=5, prewhite=FALSE)
stargazer(model1, model6, model_glm, model6.lmw, autocorr type="text", align= TRUE, style="default", df=TRUE, column.labels = c("MNK_first", "MNK_final", "SUMNK", "WMNK", "estymator Neweya-Westa"))
stargazer(model1, model6, model_glm, model6.lmw, autocorr, type="text", align= TRUE, style="default", df=TRUE, column.labels = c("MNK_first", "MNK_final", "SUMNK", "WMNK", "estymator Neweya-Westa"))
bgtest(autocorr)
#WSPÓŁLINIOWOŚĆ
# jesli VIF > 10, to zmienna objasniajaca jest współliniowa
vif(model7=6.lmw)
#WSPÓŁLINIOWOŚĆ
# jesli VIF > 10, to zmienna objasniajaca jest współliniowa
vif(model6.lmw)
################################### DEAD AND INJURED INCIDENTS ###############################
#MODEL 1
model_d_1=lm(dead_injured_incidents ~ quarantine + new_cases + new_deaths+rainfall + temperature + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model_d_1)
#MODEL 2 NEW DEATHS
model_d_2=lm(dead_injured_incidents ~ quarantine + new_cases +rainfall + temperature + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model_d_2)
#MODEL 3 new cases
model_d_3=lm(dead_injured_incidents ~ quarantine + rainfall + temperature + humidity + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model_d_2)
summary(model_d_3)
resettest(model_d_3, power=2:3, type="fitted")
#MODEL 4 humidity
model_d_4=lm(dead_injured_incidents ~ quarantine + rainfall + temperature + stringency_index+
driving + walking + fuel + pandemic + weekend_free, data = df)
summary(model_d_4)
resettest(model_d_4, power=2:3, type="fitted")
