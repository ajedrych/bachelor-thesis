theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_apple, aes(x = data)) +
geom_line(aes(y = driving, colour = "samochód"), size=1) +
geom_line(aes(y= walking, colour = "spacer"), size = 1) +
geom_hline(yintercept=100)+
geom_line(aes(y = stringency_index * scaleFactor1, colour = "COVID-19\nStringency Index"), size=1) +
scale_y_continuous(sec.axis = sec_axis(~ . /scaleFactor1, name="COVID-19 Stringency Index
"))+
scale_colour_manual(values = c("black", "#F8766D", "#7CAE00"))+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
scaleFactor1 <- max(wwa_apple$walking)/ max(wwa_apple$stringency_index)
ggplot(wwa_apple, aes(x = data)) +
geom_line(aes(y = driving, colour = "samochód"), size=1) +
geom_line(aes(y= walking, colour = "spacer"), size = 1) +
geom_hline(yintercept=100)+
geom_line(aes(y = stringency_index * scaleFactor1, colour = "COVID-19\nStringency Index"), size=1) +
scale_y_continuous(sec.axis = sec_axis(~ . /scaleFactor1, name="COVID-19 Stringency Index
"))+
scale_colour_manual(values = c("black", "#F8766D", "#7CAE00"))+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_apple, aes(x = data)) +
geom_line(aes(y = driving, colour = "samochód"), size=1) +
geom_line(aes(y= walking, colour = "spacer"), size = 1) +
geom_hline(yintercept=100)+
scale_colour_manual(values = c("#F8766D", "#7CAE00"))+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
wwa_google <- read_excel("warszawa_google_2020.xlsx")
View(wwa_google)
ggplot(wwa_google, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=0)+
geom_line(aes(y = stringency_index * scaleFactor1, colour = "COVID-19\nStringency Index"), size=1) +
scale_y_continuous(sec.axis = sec_axis(~ . /scaleFactor1, name="COVID-19 Stringency Index
"))+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=0)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
wwa_google <- read_excel("warszawa_google_2020.xlsx")
ggplot(wwa_google, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=0)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
#geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
#geom_line(aes(y= parks, colour = "parki"), size = 1) +
#geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
#geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
#geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=0)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google, aes(x = date)) +
#geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
#geom_line(aes(y= parks, colour = "parki"), size = 1) +
#geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
#geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
#geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=0)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google, aes(x = date)) +
#geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
#geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
#geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
#geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
#geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=0)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google, aes(x = date)) +
#geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
#geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
#geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
#geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
#geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=0)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google, aes(x = date)) +
#geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
#geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
#geom_line(aes(y= parks, colour = "parki"), size = 1) +
#geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
#geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=0)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google, aes(x = date)) +
#geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
#geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
#geom_line(aes(y= parks, colour = "parki"), size = 1) +
#geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
#geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=0)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
wwa_google <-
wwa_google %>%
mutate(date = as.Date(date)) %>%
group_by(date) %>%
mutate(weekday= weekdays(date),
month =  format(date, "%m"),
year = format(date, "%Y"))
library(readxl)
library(tidyverse)
library(scales)
install.packages("dsa")
library(dsa)
library(forecast)
install.packages("stR")
library(stR)
library(xts)
library(stargazer)
library(grid)
wwa_apple <- read_excel("warszawa_apple_2020.xlsx")
install.packages("dsa")
install.packages("dsa")
wwa_google <-
wwa_google %>%
mutate(date = as.Date(date)) %>%
group_by(date) %>%
mutate(weekday= weekdays(date),
month =  format(date, "%m"),
year = format(date, "%Y"))
aggregate(tydzien~week(date), data = wwa_google, sum)
aggregate(retail_and_recreation~week(date), data = wwa_google, sum)
library(lubridate)
aggregate(retail_and_recreation~week(date), data = wwa_google, sum)
aggregate(retail_and_recreation~week(date), data = wwa_google, mean)
wwa_google <- read_excel("warszawa_google_2020_week.xlsx")
ggplot(wwa_google, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=0)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=100)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
wwa_apple_w <- read_excel("warszawa_apple_2020_week.xlsx")
ggplot(wwa_apple_w, aes(x = data)) +
geom_line(aes(y = driving, colour = "samochód"), size=1) +
geom_line(aes(y= walking, colour = "spacer"), size = 1) +
geom_hline(yintercept=100)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
library(stargazer)
stargazer(wwa_apple, type = "text", title="Descriptive statistics", digits=1, out="table1.txt")
View(wwa_apple)
View(wwa_apple)
stargazer(wwa_apple[c("driving", "walking")], type = "text", title="Descriptive statistics", digits=1, out="table1.txt")
stargazer(wwa_apple[c("driving", "walking")], type = "text", title="Descriptive statistics")
summary(wwa_apple)
wwa_google_w <- read_excel("warszawa_google_2020_week.xlsx")
ggplot(wwa_google_w, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=100)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
wwa_google <- read_excel("warszawa_google_2020.xlsx")
View(wwa_google)
View(wwa_google)
wwa_google <- read_excel("warszawa_google_2020.xlsx")
summary(wwa_google)
df <- read_excel("warszawa_analiza_korelacja.xlsx")
View(df)
View(df)
# CORRELATION PLOT
library(corrplot)
kor<-cor(df)
corrplot(kor, method="circle")
kor<-cor(df[2:])
df1 <- df[ -c(1) ]
View(df1)
View(df1)
kor<-cor(df1)
corrplot(kor, method="circle")
df <- read_excel("warszawa_analiza_korelacja.xlsx")
df1 <- df[ -c(1) ]
kor<-cor(df1)
corrplot(kor, method="circle")
library("stargazer")
stargazer(as.data.frame(df), type = "text")
stargazer(as.data.frame(df), type = "text", digits = 1)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(df1, method="color", col=col(200),
type="upper", order="hclust",
addCoef.col = "black", # Add coefficient of correlation
tl.col="black", tl.srt=45, #Text label color and rotation
# Combine with significance
p.mat = p.mat, sig.level = 0.01, insig = "blank",
# hide correlation coefficient on the principal diagonal
diag=FALSE
)
corrplot(kor, method="square")
circle"
corrplot(kor, method="circle", addCoef.col = "black", # Add coefficient of correlation
tl.col="black") #Text label color and rotation
corrplot(kor, method="circle", addCoef.col = "black",tl.col="black")
corrplot(kor, method="circle")
View(kor)
View(kor)
ggplot(wwa_google_w, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=100)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google_w, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=100)+
geom_vline(xintercept = "25-03-2020")
View(wwa_google_w)
View(wwa_google_w)
ggplot(wwa_google_w, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=100)+
geom_vline(xintercept = "2020-03-25")
ggplot(wwa_google_w, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=100)+
geom_vline(xintercept = "2020-03-25")+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google_w, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=100)+
geom_vline(xintercept = as.date("2020-03-25")+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google_w, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=100)+
geom_vline(xintercept = as.date("2020-03-25")+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google_w, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=100)+
geom_vline(xintercept = as.date("2020-03-25"))+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google_w, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "handel i rekreacja"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "sklepy spożywcze i apteki"), size = 1) +
geom_line(aes(y= parks, colour = "parki"), size = 1) +
geom_line(aes(y= transit, colour = "stacje i przystanki"), size = 1) +
geom_line(aes(y= workplaces, colour = "miejsca pracy"), size = 1) +
geom_line(aes(y= residential, colour = "miejsca zamieszkania"), size = 1) +
geom_hline(yintercept=100)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_google_w, aes(x = date)) +
geom_line(aes(y = retail_and_recreation, colour = "retail_recreation"), size=1) +
geom_line(aes(y= grocery_and_pharmacy, colour = "food_pharmacy"), size = 1) +
geom_line(aes(y= parks, colour = "parks"), size = 1) +
geom_line(aes(y= transit, colour = "transit"), size = 1) +
geom_line(aes(y= workplaces, colour = "workplace"), size = 1) +
geom_line(aes(y= residential, colour = "home"), size = 1) +
geom_hline(yintercept=100)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
ggplot(wwa_apple_w, aes(x = data)) +
geom_line(aes(y = driving, colour = "driving"), size=1) +
geom_line(aes(y= walking, colour = "walking"), size = 1) +
geom_hline(yintercept=100)+
labs(y = "Zmiana
",
colour = "")+
theme_minimal()+
theme(legend.title = element_blank())+
xlab("")
corr.test(x = na.omit(df1), use = "pairwise", method = "pearson")
library(psych)
corr.test(x = na.omit(df1), use = "pairwise", method = "pearson")
#korelacja czastkowa
pcor(na.omit(df1), method = c("pearson"))
#korelacja czastkowa
library(ppcor)
pcor(na.omit(df1), method = c("pearson"))
czast <- pcor(na.omit(df1), method = c("pearson"))
corrplot(czast, method =  "circle")
View(czast)
corrplot(czast$estimate, method =  "circle")
pears <- corr.test(x = na.omit(df1), use = "pairwise", method = "pearson")
View(pears)
View(pears)
View(pears)
View(pears)
corrplot(pears$r, method = "circle")
corrplot(kor, method="circle")
corrplot(pears$r, method = "circle")
#korelacja speramana
spear <- corr.test(x = na.omit(df1), use = "pairwise", method = "spearman")
corrplot(spear$r, method = "circle")
corrplot(pears$r, method = "circle")
corrplot(spear$r, method = "circle")
corrplot(czast$estimate, method =  "circle")
man <- manova(cbind(driving, walking, retail_recreation, food_pharmacy, parks, transit, workplaces, home)~new_cases, data= df1)
summary(man)
man <- manova(cbind(retail_recreation, food_pharmacy, parks, transit, workplaces, home)~new_cases, data= df1)
summary(man)
man <- manova(cbind(driving, walking, retail_recreation, food_pharmacy, parks, transit, workplaces, home)~new_cases+new_deaths+stringency_index, data= df1)
summary(man)
man1 <- manova(cbind(retail_recreation, food_pharmacy, parks, transit, workplaces, home)~new_cases+new_deaths+stringency_index, data= df1)
summary(man1)
man2 <- manova(cbind(retail_recreation, food_pharmacy, parks, transit, workplaces)~new_cases+new_deaths+stringency_index, data= df1)
summary(man2)
stargazer(pears$r, type = "text")
stargazer(spear$r, type = "text")
library(rcompanion)
par(mfrow=c(1,2))
par(mfrow=c(1,2))
corrplot(pears$r, method = "circle", title = "Korelacja Pearsona")
corrplot(spear$r, method = "circle", title = "Korelacja Spearmana")
par(mfrow=c(1,2))
corrplot(pears$r, method = "circle", title = "\nKorelacja Pearsona")
corrplot(spear$r, method = "circle", title = "\nKorelacja Spearmana")
corrplot(pears$r, method = "circle", subtitle = "\nKorelacja Pearsona")
corrplot(pears$r, method = "circle", title = "\n\n\nKorelacja Pearsona")
par(mfrow=c(1,2))
corrplot(pears$r, method = "circle", title = "\n\n\nKorelacja Pearsona")
corrplot(spear$r, method = "circle", title = "\n\n\nKorelacja Spearmana")
# CORRELATION PLOT
library(corrplot)
shapiro.test(df1$driving)
shapiro.test(df1)
shapiro.test(df1$walking)
shapiro.test(df1$retail_recreation)
shapiro.test(df1$food_pharmacy)
shapiro.test(df1$parks)
shapiro.test(df1$transit) # p >0.05 - rozkład normalny
shapiro.test(df1$workplaces) # p >0.05 - rozkład normalny
shapiro.test(df1$home) # p >0.05 - rozkład normalny
shapiro.test(df1new_cases) # p< 0.05 - rozklad nie jest r. normalnym
shapiro.test(df1$new_cases) # p< 0.05 - rozklad nie jest r. normalnym
shapiro.test(df1$new_deaths) # p< 0.05 - rozklad nie jest r. normalnym
shapiro.test(df1$stringency_index) # p< 0.05 - rozklad nie jest r. normalnym
shapiro.test(df1$parks) # p >0.05 - rozkład normalny
